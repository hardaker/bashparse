""" This file is just going to test featuers that work in between files 
Basically just dedicated to edge cases that breaks the code. 
I need to make sure every new update keeps the important featuers"""

from unittest import TestCase
import bashparse

class TestFeatures(TestCase):

	def test_scoping_unrolling_and_functions(self):
		expected_results = [
			"FunctionNode(body=CompoundNode(list=[ReservedwordNode(pos=(6, 7) word='{'), ListNode(parts=[CommandNode(parts=[WordNode(parts=[] pos=(9, 13) word='echo'), WordNode(parts=[] pos=(14, 20) word='global'), WordNode(parts=[] pos=(21, 26) word='vars:'), WordNode(parts=[ParameterNode(pos=(27, 29) value='i')] pos=(27, 29) word='$i'), WordNode(parts=[ParameterNode(pos=(30, 32) value='j')] pos=(30, 32) word='$j')] pos=(9, 32)), OperatorNode(op='\\n' pos=(32, 33)), CommandNode(parts=[WordNode(parts=[] pos=(34, 38) word='echo'), WordNode(parts=[] pos=(39, 49) word='functional'), WordNode(parts=[] pos=(50, 55) word='vars:'), WordNode(parts=[ParameterNode(pos=(56, 58) value='1')] pos=(56, 58) word='$1')] pos=(34, 58)), OperatorNode(op='\\n' pos=(58, 59))] pos=(9, 59)), ReservedwordNode(pos=(60, 61) word='}')] pos=(6, 61) redirects=[]) name=WordNode(parts=[] pos=(0, 3) word='yep') parts=[WordNode(parts=[] pos=(0, 3) word='yep'), ReservedwordNode(pos=(3, 4) word='('), ReservedwordNode(pos=(4, 5) word=')'), CompoundNode(list=[ReservedwordNode(pos=(6, 7) word='{'), ListNode(parts=[CommandNode(parts=[WordNode(parts=[] pos=(9, 13) word='echo'), WordNode(parts=[] pos=(14, 20) word='global'), WordNode(parts=[] pos=(21, 26) word='vars:'), WordNode(parts=[ParameterNode(pos=(27, 28) value='i')] pos=(27, 28) word='$i'), WordNode(parts=[ParameterNode(pos=(30, 31) value='j')] pos=(30, 31) word='$j')] pos=(9, 31)), OperatorNode(op='\\n' pos=(32, 33)), CommandNode(parts=[WordNode(parts=[] pos=(34, 38) word='echo'), WordNode(parts=[] pos=(39, 49) word='functional'), WordNode(parts=[] pos=(50, 55) word='vars:'), WordNode(parts=[ParameterNode(pos=(56, 57) value='1')] pos=(56, 57) word='$1')] pos=(34, 57)), OperatorNode(op='\\n' pos=(58, 59))] pos=(9, 59)), ReservedwordNode(pos=(60, 61) word='}')] pos=(3, 61) redirects=[])] pos=(0, 61))", "CompoundNode(list=[ForNode(parts=[ReservedwordNode(pos=(63, 66) word='for'), WordNode(parts=[] pos=(67, 68) word='i'), ReservedwordNode(pos=(69, 71) word='in'), WordNode(parts=[] pos=(72, 73) word='1'), WordNode(parts=[] pos=(74, 75) word='2'), ReservedwordNode(pos=(75, 76) word=';'), ReservedwordNode(pos=(77, 79) word='do'), CompoundNode(list=[ForNode(parts=[ReservedwordNode(pos=(81, 84) word='for'), WordNode(parts=[] pos=(85, 86) word='j'), ReservedwordNode(pos=(87, 89) word='in'), WordNode(parts=[] pos=(90, 91) word='a'), WordNode(parts=[] pos=(92, 93) word='b'), ReservedwordNode(pos=(93, 94) word=';'), ReservedwordNode(pos=(95, 97) word='do'), ListNode(parts=[CommandNode(parts=[WordNode(parts=[] pos=(99, 103) word='echo'), WordNode(parts=[] pos=(104, 105) word='1'), WordNode(parts=[] pos=(107, 108) word='a'), WordNode(parts=[] pos=(110, 113) word='foo')] pos=(99, 113)), OperatorNode(op='\\n' pos=(113, 114)), CompoundNode(list=[ListNode(parts=[CommandNode(parts=[WordNode(parts=[] pos=(9, 13) word='echo'), WordNode(parts=[] pos=(14, 20) word='global'), WordNode(parts=[] pos=(21, 26) word='vars:'), WordNode(parts=[] pos=(27, 28) word='1'), WordNode(parts=[] pos=(30, 31) word='a')] pos=(9, 31)), OperatorNode(op='\\n' pos=(32, 33)), CommandNode(parts=[WordNode(parts=[] pos=(34, 38) word='echo'), WordNode(parts=[] pos=(39, 49) word='functional'), WordNode(parts=[] pos=(50, 55) word='vars:'), WordNode(parts=[] pos=(56, 62) word='1 .. a')] pos=(34, 62)), OperatorNode(op='\\n' pos=(58, 59))] pos=(9, 59))] pos=(66, 59) redirects=[]), OperatorNode(op='\\n' pos=(129, 130))] pos=(99, 130)), ReservedwordNode(pos=(131, 135) word='done')] pos=(81, 135))] pos=(66, 135) redirects=[]), ReservedwordNode(pos=(137, 141) word='done')] pos=(63, 141))] pos=(66, 141) redirects=[])", 
			"CompoundNode(list=[ForNode(parts=[ReservedwordNode(pos=(63, 66) word='for'), WordNode(parts=[] pos=(67, 68) word='i'), ReservedwordNode(pos=(69, 71) word='in'), WordNode(parts=[] pos=(72, 73) word='1'), WordNode(parts=[] pos=(74, 75) word='2'), ReservedwordNode(pos=(75, 76) word=';'), ReservedwordNode(pos=(77, 79) word='do'), CompoundNode(list=[ForNode(parts=[ReservedwordNode(pos=(81, 84) word='for'), WordNode(parts=[] pos=(85, 86) word='j'), ReservedwordNode(pos=(87, 89) word='in'), WordNode(parts=[] pos=(90, 91) word='a'), WordNode(parts=[] pos=(92, 93) word='b'), ReservedwordNode(pos=(93, 94) word=';'), ReservedwordNode(pos=(95, 97) word='do'), ListNode(parts=[CommandNode(parts=[WordNode(parts=[] pos=(99, 103) word='echo'), WordNode(parts=[] pos=(104, 105) word='1'), WordNode(parts=[] pos=(107, 108) word='b'), WordNode(parts=[] pos=(110, 113) word='foo')] pos=(99, 113)), OperatorNode(op='\\n' pos=(113, 114)), CompoundNode(list=[ListNode(parts=[CommandNode(parts=[WordNode(parts=[] pos=(9, 13) word='echo'), WordNode(parts=[] pos=(14, 20) word='global'), WordNode(parts=[] pos=(21, 26) word='vars:'), WordNode(parts=[] pos=(27, 28) word='1'), WordNode(parts=[] pos=(30, 31) word='b')] pos=(9, 31)), OperatorNode(op='\\n' pos=(32, 33)), CommandNode(parts=[WordNode(parts=[] pos=(34, 38) word='echo'), WordNode(parts=[] pos=(39, 49) word='functional'), WordNode(parts=[] pos=(50, 55) word='vars:'), WordNode(parts=[] pos=(56, 62) word='1 .. b')] pos=(34, 62)), OperatorNode(op='\\n' pos=(58, 59))] pos=(9, 59))] pos=(66, 59) redirects=[]), OperatorNode(op='\\n' pos=(129, 130))] pos=(99, 130)), ReservedwordNode(pos=(131, 135) word='done')] pos=(81, 135))] pos=(66, 135) redirects=[]), ReservedwordNode(pos=(137, 141) word='done')] pos=(63, 141))] pos=(66, 141) redirects=[])", 
			"CompoundNode(list=[ForNode(parts=[ReservedwordNode(pos=(63, 66) word='for'), WordNode(parts=[] pos=(67, 68) word='i'), ReservedwordNode(pos=(69, 71) word='in'), WordNode(parts=[] pos=(72, 73) word='1'), WordNode(parts=[] pos=(74, 75) word='2'), ReservedwordNode(pos=(75, 76) word=';'), ReservedwordNode(pos=(77, 79) word='do'), CompoundNode(list=[ForNode(parts=[ReservedwordNode(pos=(81, 84) word='for'), WordNode(parts=[] pos=(85, 86) word='j'), ReservedwordNode(pos=(87, 89) word='in'), WordNode(parts=[] pos=(90, 91) word='a'), WordNode(parts=[] pos=(92, 93) word='b'), ReservedwordNode(pos=(93, 94) word=';'), ReservedwordNode(pos=(95, 97) word='do'), ListNode(parts=[CommandNode(parts=[WordNode(parts=[] pos=(99, 103) word='echo'), WordNode(parts=[] pos=(104, 105) word='2'), WordNode(parts=[] pos=(107, 108) word='a'), WordNode(parts=[] pos=(110, 113) word='foo')] pos=(99, 113)), OperatorNode(op='\\n' pos=(113, 114)), CompoundNode(list=[ListNode(parts=[CommandNode(parts=[WordNode(parts=[] pos=(9, 13) word='echo'), WordNode(parts=[] pos=(14, 20) word='global'), WordNode(parts=[] pos=(21, 26) word='vars:'), WordNode(parts=[] pos=(27, 28) word='2'), WordNode(parts=[] pos=(30, 31) word='a')] pos=(9, 31)), OperatorNode(op='\\n' pos=(32, 33)), CommandNode(parts=[WordNode(parts=[] pos=(34, 38) word='echo'), WordNode(parts=[] pos=(39, 49) word='functional'), WordNode(parts=[] pos=(50, 55) word='vars:'), WordNode(parts=[] pos=(56, 62) word='2 .. a')] pos=(34, 62)), OperatorNode(op='\\n' pos=(58, 59))] pos=(9, 59))] pos=(66, 59) redirects=[]), OperatorNode(op='\\n' pos=(129, 130))] pos=(99, 130)), ReservedwordNode(pos=(131, 135) word='done')] pos=(81, 135))] pos=(66, 135) redirects=[]), ReservedwordNode(pos=(137, 141) word='done')] pos=(63, 141))] pos=(66, 141) redirects=[])", 
			"CompoundNode(list=[ForNode(parts=[ReservedwordNode(pos=(63, 66) word='for'), WordNode(parts=[] pos=(67, 68) word='i'), ReservedwordNode(pos=(69, 71) word='in'), WordNode(parts=[] pos=(72, 73) word='1'), WordNode(parts=[] pos=(74, 75) word='2'), ReservedwordNode(pos=(75, 76) word=';'), ReservedwordNode(pos=(77, 79) word='do'), CompoundNode(list=[ForNode(parts=[ReservedwordNode(pos=(81, 84) word='for'), WordNode(parts=[] pos=(85, 86) word='j'), ReservedwordNode(pos=(87, 89) word='in'), WordNode(parts=[] pos=(90, 91) word='a'), WordNode(parts=[] pos=(92, 93) word='b'), ReservedwordNode(pos=(93, 94) word=';'), ReservedwordNode(pos=(95, 97) word='do'), ListNode(parts=[CommandNode(parts=[WordNode(parts=[] pos=(99, 103) word='echo'), WordNode(parts=[] pos=(104, 105) word='2'), WordNode(parts=[] pos=(107, 108) word='b'), WordNode(parts=[] pos=(110, 113) word='foo')] pos=(99, 113)), OperatorNode(op='\\n' pos=(113, 114)), CompoundNode(list=[ListNode(parts=[CommandNode(parts=[WordNode(parts=[] pos=(9, 13) word='echo'), WordNode(parts=[] pos=(14, 20) word='global'), WordNode(parts=[] pos=(21, 26) word='vars:'), WordNode(parts=[] pos=(27, 28) word='2'), WordNode(parts=[] pos=(30, 31) word='b')] pos=(9, 31)), OperatorNode(op='\\n' pos=(32, 33)), CommandNode(parts=[WordNode(parts=[] pos=(34, 38) word='echo'), WordNode(parts=[] pos=(39, 49) word='functional'), WordNode(parts=[] pos=(50, 55) word='vars:'), WordNode(parts=[] pos=(56, 62) word='2 .. b')] pos=(34, 62)), OperatorNode(op='\\n' pos=(58, 59))] pos=(9, 59))] pos=(66, 59) redirects=[]), OperatorNode(op='\\n' pos=(129, 130))] pos=(99, 130)), ReservedwordNode(pos=(131, 135) word='done')] pos=(81, 135))] pos=(66, 135) redirects=[]), ReservedwordNode(pos=(137, 141) word='done')] pos=(63, 141))] pos=(66, 141) redirects=[])"	
		]
		text = "yep() {\n echo global vars: $i $j\n echo functional vars: $1\n }\n for i in 1 2; do\n for j in a b; do\n echo $i $j foo\n yep \"$i .. $j\"\n done\n done"
		nodes = bashparse.parse(text)
		function_dict = {}
		var_list = {}
		function_dict = bashparse.build_function_dictionary(nodes)
		unrolled_nodes = bashparse.replace_functions(nodes, function_dict)
		actual_results = bashparse.substitute_variables(unrolled_nodes, var_list)
		actual_results = [str(x) for x in actual_results]
		self.assertTrue(expected_results == actual_results)
